events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    sendfile on;
    keepalive_timeout 65;

    server {
        listen 80;
        server_name localhost;
    
        root /usr/share/nginx/html;
        index index.html;

        # Backend API proxy (Docker service name "backend")
        location /api/ {
            # Preserve original URI (/api/...) when proxying to backend
            # Using proxy_pass without trailing slash keeps the /api prefix
            proxy_pass http://backend:8000;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Long-running syncs may exceed default 60s; increase proxy timeouts
            proxy_connect_timeout 300s;
            proxy_send_timeout 600s;
            proxy_read_timeout 600s;
            send_timeout 600s;

            # Stream responses progressively to avoid buffering delays
            proxy_buffering off;
        }
    
        # Handle client-side routing
        location / {
            try_files $uri $uri/ /index.html;
        }
    
        # Disable cache for HTML files to prevent content duplication on scroll
        location ~* \.(html)$ {
            add_header Cache-Control "no-cache, no-store, must-revalidate, max-age=0";
            add_header Pragma "no-cache";
            add_header Expires "0";
            expires -1;
            etag off;
            if_modified_since off;
        }

        # Also disable cache for index.html specifically
        location = /index.html {
            add_header Cache-Control "no-cache, no-store, must-revalidate, max-age=0";
            add_header Pragma "no-cache";
            add_header Expires "0";
            expires -1;
            etag off;
            if_modified_since off;
        }

        # Disable cache for JS and CSS in development to prevent stale content issues
        location ~* \.(js|css)$ {
            add_header Cache-Control "no-cache, max-age=0";
            expires 1h;
        }

        # Cache other static assets normally
        location ~* \.(png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    
        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_types
            text/plain
            text/css
            text/xml
            text/javascript
            application/javascript
            application/xml+rss
            application/json;
    }
}